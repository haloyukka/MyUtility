ChatGPT(GPT-4前提

# 問い合わせ方法について

## 1. 条件を箇条書きする

ほしい結果の条件を箇条書きします。

ChatGPTは話し言葉や文章で問い合わせても結果を得ることができますが、複雑な条件を文章で伝えることはそれなりに難しいことから、指示を出す人間側が楽をするために箇条書きにします。
複雑な問い合わせの場合には必要に応じて親子関係等の構造化を取り入れます。

## 2. 指示を追加する

問い合わせ結果が意図したものでない場合には指示を追加します。

最初の問い合わせで必ずしも望む結果が得られるとは限らないことから、要件に合わせて指示を追加し微調整します。
例えばサンプルコードの生成であれば、ライブラリや処理系のバージョン、設定の記述方法等できる限り詳細に指示を出した方が望む結果が得られやすいです。

## 3. アスキーアートを出力させる

シーケンス図やクラス図等をアスキーアートで生成させます。

現状のChatGPTは画像を出力する機能が備わってないものの、テキストは出力可能であることから、シーケンス図やクラス図等の情報をアスキーアートで出力させます。
あるいはPUML等のツールで利用可能な形式で出力する方法もあります。

## 4. URLを列挙させる

ChatGPTに特定の情報のないようを求めるのではなく、求める情報が記載されたURLを列挙させます。

ChatGPTは必ずしも100%正確な情報を答えてくれるわけではなく、厳密な仕様の確認が必要なITシステム、コンポーネントの情報の検索にはそのままでは不向きです。
そこでベストプラクティス集や、公式ドキュメントなどのURLをChatGPTに探させることで、情報の正確性を担保しつつ必要な情報を入手できます。(検索が柔軟なgoogle検索のイメージです)

## 5. サンプルコードを生成させる

LinuxのシステムコールやOSSのライブラリのサンプルコードを生成させます。

LinuxのシステムコールやOSSをmanページや公式ドキュメントをみても、サンプル実装がなかったり、理解が難しいことがあります。
単にGoogle検索するだけでは大量のノイズが紛れ込み、なかなかよい感じのものがみつからないこともざらにあることから、個人的にはかなり有効な使い方であると考えています。

## 6. 完璧を求めない

ChatGPTの出力する結果に完璧を求めず、おおよそ望ましい結果が得られた場合には手動での操作に切り替えます。

自然言語の指示で100%完全に望む結果を得ることは難しいことから、おおよそ望む結果を得られた場合には、googleサイト内検索や成果物の手修正に切り替えます。

# 個人的に役に立った使い方について

個人的には以下のような使い方が役にたちました。

1. 全く知らない技術情報のサマリーにプラスして、公式ドキュメントやベストプラクティス集のURLを出力させることで素早く概要を把握しつつ、ダブルチェックを実施する
1. OSSのライブラリやLinuxのシステムコールのサンプルコード生成する
1. 特定処理の概要をシーケンス図化する
